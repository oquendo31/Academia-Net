<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Subtitle" xml:space="preserve">
    <value>Compare university options and build your academic future</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>AcademiaNet</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Institutions" xml:space="preserve">
    <value>Institutions</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>No records to show...</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Institution" xml:space="preserve">
    <value>Institution</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="LeaveAndLoseChanges" xml:space="preserve">
    <value>Do you want to leave the page and lose your changes?</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>SaveChanges</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="RecordSavedOk" xml:space="preserve">
    <value>Record saved successfully.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>Are you sure to delete the {0}: {1}?</value>
  </data>
  <data name="RecordDeletedOk" xml:space="preserve">
    <value>Record deleted successfully.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="RecordCreatedOk" xml:space="preserve">
    <value>Record created successfully.</value>
  </data>
  <data name="ERR001" xml:space="preserve">
    <value>Record not found.</value>
  </data>
  <data name="ERR002" xml:space="preserve">
    <value>Cannot be deleted because it has related records.</value>
  </data>
  <data name="ERR003" xml:space="preserve">
    <value>The record you are trying to create already exists.</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>Field {0} cannot be longer than {1} characters.</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>Field {0} is required.</value>
  </data>
  <data name="AcademicProgram" xml:space="preserve">
    <value>Academic Program</value>
  </data>
  <data name="AcademicPrograms" xml:space="preserve">
    <value>Academics Programs</value>
  </data>
  <data name="ERR004" xml:space="preserve">
    <value>The country Id is not valid.</value>
  </data>
  <data name="ERR005" xml:space="preserve">
    <value>The team Id is not valid.</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Select a File… </value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search…</value>
  </data>
  <data name="SelectAnInstitution" xml:space="preserve">
    <value>-- Select an Institution ---</value>
  </data>
  <data name="EnterCategory" xml:space="preserve">
    <value>-- Enter the category ---</value>
  </data>
  <data name="EnterAcademicProgramName" xml:space="preserve">
    <value>Enter the academic program name</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Locations" xml:space="preserve">
    <value>Locations </value>
  </data>
  <data name="Enterlocation" xml:space="preserve">
    <value>-- Enter the location ---</value>
  </data>
  <data name="EnterInstitution" xml:space="preserve">
    <value>Enter the Institution </value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EnterDescription" xml:space="preserve">
    <value>Enter the program description.</value>
  </data>
  <data name="ExamManagement" xml:space="preserve">
    <value>Exam Management</value>
  </data>
  <data name="RecordsNumber" xml:space="preserve">
    <value>RecordsNumber</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="UserType" xml:space="preserve">
    <value>User Type</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not Found</value>
  </data>
  <data name="NothingInRoute" xml:space="preserve">
    <value>Sorry, there is nothing on this route.</value>
  </data>
  <data name="Authorizing" xml:space="preserve">
    <value>Authorizing… </value>
  </data>
  <data name="NotAuthorized" xml:space="preserve">
    <value>You are not authorized to view this content...</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LengthField" xml:space="preserve">
    <value>Field {0} must be between {2} and {1} characters.</value>
  </data>
  <data name="PasswordAndConfirmationDifferent" xml:space="preserve">
    <value>The password and confirmation are not the same.</value>
  </data>
  <data name="PasswordConfirm" xml:space="preserve">
    <value>Password Confirm</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ValidEmail" xml:space="preserve">
    <value>You must enter a valid email.</value>
  </data>
  <data name="MinLength" xml:space="preserve">
    <value>The {0} field must have at least {1} characters.</value>
  </data>
  <data name="ERR006" xml:space="preserve">
    <value>Incorrect email or password.</value>
  </data>
</root>